pool:
  name: iModelTechCI
  demands: Agent.OS -equals Windows_NT

variables:
  tempDocsLocation: '$(Agent.BuildDirectory)\tempDocsBuild'

steps:

- template: core-build.yaml

- task: NodeTool@0
  displayName: 'Use Node 10.x'
  inputs:
    versionSpec: 10.x
    checkLatest: true

- script: './node_modules/.bin/bmsBuild --strictLinkChecking --topicsMustHaveDesc --source $(System.ArtifactsDirectory)/staging --destination $(agent.builddirectory)/tempDocsBuild/public_build --siteTitle iTwin.js'
  displayName: 'Run bmsBuild'

- task: ms-codeanalysis.vss-microsoft-security-code-analysis-devops.build-task-credscan.CredScan@2
  displayName: 'Run Credential Scanner'
  inputs:
    scanFolder: '$(agent.builddirectory)/tempDocsBuild'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/2')))

- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact - .updated.json'
  inputs:
    targetPath: '$(System.ArtifactsDirectory)\staging\config\.updated.json'
    artifact: .updated.json
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release')))

- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact - Credential Scanner'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)\..\_sdt\logs\CredentialScanner'
    artifact: CredentialScanner
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release')))

- task: DownloadPipelineArtifact@2
  displayName: 'Download Pipeline Artifact - Nuget Spec'
  inputs:
    buildType: specific
    project: '2c48216e-e72f-48b4-a4eb-40ff1c04e8e4'
    definition: 1830
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release')))

- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: 'Replace tokens in NugetPackage.nuspec'
  inputs:
    targetFiles: '$(Agent.BuildDirectory)\DocsNugetSpecFile\NugetPackage.nuspec'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release')))

- task: DeleteFiles@1
  displayName: 'Delete files from $(tempDocsLocation\public_build'
  inputs:
    SourceFolder: '$(tempDocsLocation)\public_build'
    Contents: index.html
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release')))

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.9.2'
  inputs:
    versionSpec: 4.9.2
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release')))

- task: NuGetCommand@2
  displayName: 'NuGet pack'
  inputs:
    command: pack
    packagesToPack: '$(Agent.BuildDirectory)\DocsNugetSpecFile\NugetPackage.nuspec'
    versioningScheme: byBuildNumber
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/2')))

- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact - iModel.jsDocumentation .nupkg'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)\iModeljs.Documentation.$(Build.BuildNumber).nupkg'
    artifact: 'iModeljsDocumentationFiles_$(Build.BuildNumber)'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/2')))

